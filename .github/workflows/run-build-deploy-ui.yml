name: Build & Push Docker Image after modifying the ui

on:
    push:
      paths:
        - 'front/**'  # Exécuter le workflow uniquement si le code du conteneur est modifié

env:
    DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
    APP_NAME: frontend # Nom du dossier contenant le code de l'interface utilisateur
    DOCKER_IMAGE_PATH: hedredo/dashboard_ui:latest

jobs:
  build-push:
    runs-on: ubuntu-latest # Same as the container image

    steps:
      # Étape 1 : Cloner le dépôt
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2 : Installer uv
      - name: Install uv
        uses: astral-sh/setup-uv@v5

      # Étape 3 : Installer Python (en utilisant .python-version)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ./${{ env.APP_NAME }}/.python-version

      # Étape 4 : Installer les dépendances avec uv
      - name: Install dependencies with uv
        working-directory: ./${{ env.APP_NAME }}
        run: uv sync --locked

      # Étape 5 : Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_PATH }} ./${{ env.APP_NAME }}

      # Étape 6 : Docker login using the Docker login action
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Étape 7 : Push Docker image
      - name: Push Docker image
        run: |
          docker push ${{ env.DOCKER_IMAGE_PATH }}